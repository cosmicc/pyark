#!/usr/bin/env python3.6

import argparse
import sys
from os import _exit
from time import sleep
from loguru import logger as log
from modules.logclient import LogClient


def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('lines', action='store', help='number of lines in log history to show')
    parser.add_argument('-v', '--verbose', action='store_true', help='verbose (client debug)')
    parser.add_argument('--html', action='store_true', help='html output')
    parser.add_argument('-s', '--server', action='store', default='ALL', help='show only this log type')
    parser.add_argument('-d', '--debug', action='store_true', help='show debug log')
    parser.add_argument('-t', '--trace', action='store_true', help='show trace log')
    parser.add_argument('-ex', '--extend', action='store_true', help='show extended info lines')
    parser.add_argument('--showonly', action='store', default='ALL', help='show only this log type')
    parser.add_argument('-eo', '--errorsonly', action='store_true', help='warning, errors, and critical only')
    parser.add_argument('-nf', '--nofollow', action='store_false', help='dont follow continuous log')
    parser.add_argument('-re', '--errors', action='store_false', help='remove error/crit entries')
    parser.add_argument('-rs', '--startexit', action='store_false', help='remove start/exit entries')
    parser.add_argument('-rc', '--commands', action='store_false', help='remove command entries')
    parser.add_argument('-rj', '--joinleave', action='store_false', help='remove join/leave entries')

    args = parser.parse_args()

    simplelogformat = '<level>{time:YYYY-MM-DD HH:mm:ss.SSS}</level> | <level>LOGGR</level> | <level>{level: <7}</level> | <level>{message}</level>'

    log.remove()
    llevel = 'DEBUG' if args.verbose else 'INFO'
    log.add(sys.stderr, level=llevel, format=simplelogformat)

    argsdebug = 1 if args.debug else 0
    argstrace = 1 if args.trace else 0
    argsextend = 1 if args.extend else 0
    argsstartexit = 1 if args.startexit else 0
    argscommands = 1 if args.commands else 0
    argserrorsonly = 1 if args.errorsonly else 0
    argsjoinleave = 1 if args.joinleave else 0
    argsfollow = 1 if args.nofollow else 0
    argserrors = 1 if args.errors else 0

    if args.showonly != 'ALL':
        argsshowonly = f'{args.showonly:<8}!'
    else:
        argsshowonly = f'ALL     !'
    if args.server != 'ALL':
        argsserver = f'{args.server:<5}'
    else:
        argsserver = f'ALL   '
    logwatch = LogClient(args.lines, argsdebug, argstrace, argsextend, argsstartexit, argscommands, argserrorsonly, argsjoinleave, argsfollow, argserrors, argsshowonly, argsserver, args.html)
    # logwatch.connect()
    logwatch.connect()
    while True:
        try:
            lline = logwatch.getline()
            if lline is not None:
                print(lline)
        except KeyboardInterrupt:
            logwatch.close()
            _exit(0)
        else:
            sleep(.05)


if __name__ == '__main__':
    main()
