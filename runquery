#!/usr/bin/python3

import threading
import subprocess
import argparse, sqlite3
from configparser import ConfigParser
from datetime import datetime
import time

configfile = '/home/ark/pyark.cfg'

class ExtConfigParser(ConfigParser):
    def getlist(self, section, option):
        value = self.get(section, option)
        return list(filter(None, (x.strip() for x in value.split(','))))

    def getlistint(self, section, option):
        return [int(x) for x in self.getlist(section, option)]

config = ExtConfigParser()
config.read(configfile)

sharedpath = config.get('general', 'shared')

now = time.time()

sqldb = f'{sharedpath}/db/pyark.db'

conn = sqlite3.connect(sqldb)
c = conn.cursor()

##delete the admin account from db
#c.execute('DELETE from players WHERE steamid = 76561198408657294')

#c.execute('SELECT * from players WHERE steamid = 76561198187923238')
#c.execute('DELETE from players WHERE steamid = 76561198187923238')
#c.execute('CREATE TABLE IF NOT EXISTS general (cfgver TEXT)')
#c.execute('ALTER TABLE players ADD COLUMN connects INTEGER')
#c.execute('INSERT INTO general ("cfgver") VALUES ("1")')
#c.execute('UPDATE instances SET restartcountdown = 30')
#c.execute('UPDATE players SET firstseen = ? WHERE steamid = ?', (now,'76561198028548947'))
#conn.commit()

#c.execute('SELECT * from instances')
#alldata = c.fetchall()
#for row in alldata:
#    print(row)

c.close()
conn.close()

ismodupd = subprocess.run('arkmanager checkmodupdate @%s' % ('volcano'), stdout=subprocess.PIPE, stderr=subprocess.DEVNULL, shell=True)
ismodupd = ismodupd.stdout.decode('utf-8')
print(ismodupd)
for each in ismodupd:
    if each.find('has been updated') != -1:
        print(each.split(' '))

    


